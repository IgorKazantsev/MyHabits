from fastapi.middleware.cors import CORSMiddleware
from fastapi import FastAPI, Request
import time

from app.routers import auth_router
from app.routers import habit_router
from app.routers import reward_router
from app.routers import habit_log_router
from app.routers import admin_router


app = FastAPI()


# üî• –î–æ–±–∞–≤–ª—è–µ–º CORS –∑–¥–µ—Å—å —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è app
app.add_middleware(
    CORSMiddleware,
    allow_origins=["*"],  # –ü–æ–∫–∞ —Ä–∞–∑—Ä–µ—à–∞–µ–º –≤—Å–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)


# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å–µ—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
@app.middleware("http")
async def log_requests(request: Request, call_next):
    print(f"‚û°Ô∏è Incoming request: {request.method} {request.url}")
    start_time = time.time()

    response = await call_next(request)

    duration = time.time() - start_time
    print(f"‚¨ÖÔ∏è Completed in {duration:.2f}s with status {response.status_code}")
    return response

# üìå –ü–æ–¥–∫–ª—é—á–∞–µ–º —Ä–æ—É—Ç–µ—Ä—ã (–ø—Ä–µ—Ñ–∏–∫—Å —É–∂–µ –≤–Ω—É—Ç—Ä–∏ —Ñ–∞–π–ª–∞)
app.include_router(auth_router.router)          # <-- –±–µ–∑ prefix
app.include_router(habit_router.router)
app.include_router(reward_router.router)
app.include_router(habit_log_router.router)
app.include_router(admin_router.router)