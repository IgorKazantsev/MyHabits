from pydantic import BaseModel
from typing import Optional, List
from datetime import datetime
from app.schemas.reward_schema import RewardCreate, RewardResponse

class HabitCreate(BaseModel):
    name: str
    description: Optional[str] = None
    schedule_type: str
    days_of_week: Optional[List[str]] = None  # üî• –ù–æ–≤–æ–µ –ø–æ–ª–µ: —Å–ø–∏—Å–æ–∫ –¥–Ω–µ–π –Ω–µ–¥–µ–ª–∏
    reward: Optional[RewardCreate] = None  # –û–±—ä–µ–∫—Ç –Ω–∞–≥—Ä–∞–¥—ã

class HabitUpdate(BaseModel):
    name: Optional[str] = None
    description: Optional[str] = None
    schedule_type: Optional[str] = None
    days_of_week: Optional[List[str]] = None  # üî• –ù–æ–≤–æ–µ –ø–æ–ª–µ
    reward: Optional[RewardCreate] = None  # –û–±—ä–µ–∫—Ç –Ω–∞–≥—Ä–∞–¥—ã –¥–ª—è –∑–∞–º–µ–Ω—ã

class HabitResponse(BaseModel):
    habit_id: int
    name: str
    description: Optional[str]
    schedule_type: str
    days_of_week: Optional[List[str]] = None  # üî• –ù–æ–≤–æ–µ –ø–æ–ª–µ
    created_at: datetime
    reward: Optional[RewardResponse] = None  # –í–ª–æ–∂–µ–Ω–Ω—ã–π –æ–±—ä–µ–∫—Ç

    class Config:
        from_attributes = True
